s:export OLDPIPE = ${&pipe-symbol||>pipe>} ;;
@ {user} unsetting pipe-symbol for testing ;;
s:option pipe-symbol ;;

s:export FAILEDTESTS = ;;

s:export line-number = $(n:assert -title=line-number $(echo ${LINENO}) >test> = 1) ;;

s:export calc-syntax = $(n:assert -title=Calc-syntax $[3 + 3] >test> = 6) ;;

s:export advanced-calc-syntax = $(n:assert -title=Advanced-calc-syntax $[$(echo -D 1) * 5] >test> = 5) ;;

s:export option-parsing = $(n:assert -title=Option-parsing $(opts -a -b -c -a=\s{hi there}) >test> T= **a**: `hi there`
**b**: `true`
**c**: `true`) ;;

s:export some-pipes = $(n:assert -title=Some-pipes $(echo -D $["this is neat"] >pipe> rev) >test> T= taen si siht) ;;

s:export macros = $(n:assert -title=macros $(s:export test = echo -D hi ;; ${test>!>}) >test> = hi) ;;

s:export advanced-macros = $(n:assert -title=advanced-macros $(s:export test = echo -D {%0} {%1} ;; ${test>!>one+two}) >test> = one two) ;;

@ {user} setting pipe-symbol back ;;
s:option pipe-symbol ${OLDPIPE} ;;

paged-embed ${line-number}
${calc-syntax}
${advanced-calc-syntax}
${option-parsing}
${some-pipes}
${macros}
${advanced-macros}
